# 1. lines startswith '#' char will be ignored.
# 2. do not add comments at the end of the parameter lines.
# 3. the space around '=' will be ignored.

[module-all-BEGIN] # do not touch this
#################################################################################
#####-------------------------- all module ---------------------------------#####
# Important: 'all' module support pair-end data only

###################
# optional arguments

# which genetic code table to use? 'auto' means
# determined by '--clade' option.
genetic_code = auto

# which clade does your species belong to
# choose from "Chordata", "Arthropoda"
clade=Chordata

###################
# Common arguments

# output prefix
outprefix = Obeecheyi

# thread number
thread_number = 8 

##################
# Input fastq files

# fastq 1 file
fastq1 = Obeecheyi-subsample-Illumina_R1.fastq 

# fastq 2 file
fastq2 = Obeecheyi-subsample-Illumina_R2.fastq

# set 'True' if the input is in the Illumina 1.3 FASTQ-like (Q+64) format.
fastq_quality_shift = True

# read length of fastq reads, used by SOAPTrans and bwa.
# It must be >= 71 bp
fastq_read_length = 150

# use only part (# Gbp) of the input fastq file in the
# analysis. By default, all data will be used.
# Support for all, all2, filter, assemble and findmitoscaf only.
fq_size = 

######################
# Filter arguments

# input 1.adapter.list.gz file. will not filter adapter
# contamination if not provided
adapter1 = adaptor1.fa

# input 2.adapter.list.gz file. will not filter adapter
# contamination if not provided
adapter2 = adaptor2.fa

# output read1 fastq file
fastq3 = clean_R1.fq.gz

# output read1 fastq file
fastq4 = clean_R2.fq.gz

# set 'True' if you want to filter duplications (caused by PCRs
# After adapter ligation, thudirections of read1 & read2 of
# duplications should be completely identical)
duplication =

# cut-off adapter mis-match bases
adapter_mismatch = 3

# cut-off adapter align length
adapter_length = 15

# keep only bases between BEG and END for each read
# format: BEG,END
# use 'full_length_read' to do not trim the reads
keep_region = full_length_read

# the maximun N allowed per read
Ns_number = 10

# the maixmum percentage of low quality (ASCII code's integer)
# bases allowed in single end reads
# format: QUAL,CONT
low_quality = 55,20

######################
# Assembly arguments

# insert size of input fastq files
insert_size = 300

# 2 for quick_mode, 3 for multi-kmer mode
run_mode = 2

# when use '--run_mode 3', you should provide the fasta
# sequences from quick mode (if any).
quick_mode_seq_file =

# when use '--quick_mode_seq_file' option, you should also provide
# the protein coding genes names for each fasta sequence.
# per-line format:
# seqid gene1 gene2
quick_mode_fa_genes_file =

# when use '--run_mode 3', you should also provide the missing
# protein coding genes names
# multiple genes can be seperated by space
missing_PCGs =

# when use '--run_mode 3', you should provide the score file
# from quick mode (if any). e.g. the 'high_abundance' scores
quick_mode_score_file =

# when use '--run_mode 3', you should provide the sequence file
# which the '--quick_mode_score_file' is corresponding to in the
# quick mode (if any).
quick_mode_prior_seq_file =

######################
# Search mitochondrial sequences arguments

# choose from '1' and '3'
# 1: filter out non-requiring_taxa sequences by mito-PCGs
# annotation to do taxa assignment.
# 3: do not filter [%(default)s]
filter_taxa_method = 1

# the minimum abundance of sequence required
min_abundance = 10

# filtering out non-requiring taxa sequences
# which may be contamination
# this can be a class, order, family, genus, or species name
requiring_taxa = Sciuridae

# choose from ["0", "1", "2", "3", "4", "5", "6"]
# The relaxing threshold for filtering non-target-requiring_taxa.
# The larger digital means more relaxing.
requiring_relax = 0

######################
# Annotation arguments
# species name to use in output genbank file
species_name = Otospermophilus beecheyi

[module-all-END] # do not touch this
